{"version":3,"file":"streamstech-ui-sdk-fuse-services.mjs","sources":["../../../../projects/streamstech/ui-sdk/fuse/services/src/utils.service.ts","../../../../projects/streamstech/ui-sdk/fuse/services/streamstech-ui-sdk-fuse-services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { IsActiveMatchOptions } from '@angular/router';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FuseUtilsService\r\n{\r\n    /**\r\n     * Constructor\r\n     */\r\n    constructor()\r\n    {\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Accessors\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Get the equivalent \"IsActiveMatchOptions\" options for \"exact = true\".\r\n     */\r\n    get exactMatchOptions(): IsActiveMatchOptions\r\n    {\r\n        return {\r\n            paths       : 'exact',\r\n            fragment    : 'ignored',\r\n            matrixParams: 'ignored',\r\n            queryParams : 'exact'\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get the equivalent \"IsActiveMatchOptions\" options for \"exact = false\".\r\n     */\r\n    get subsetMatchOptions(): IsActiveMatchOptions\r\n    {\r\n        return {\r\n            paths       : 'subset',\r\n            fragment    : 'ignored',\r\n            matrixParams: 'ignored',\r\n            queryParams : 'subset'\r\n        };\r\n    }\r\n\r\n    // -----------------------------------------------------------------------------------------------------\r\n    // @ Public methods\r\n    // -----------------------------------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Generates a random id\r\n     *\r\n     * @param length\r\n     */\r\n    randomId(length: number = 10): string\r\n    {\r\n        const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        let name = '';\r\n\r\n        for ( let i = 0; i < 10; i++ )\r\n        {\r\n            name += chars.charAt(Math.floor(Math.random() * chars.length));\r\n        }\r\n\r\n        return name;\r\n    }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;MAMa,gBAAgB,CAAA;AAEzB;;AAEG;AACH,IAAA,WAAA,GAAA;KAEC;;;;AAMD;;AAEG;AACH,IAAA,IAAI,iBAAiB,GAAA;QAEjB,OAAO;AACH,YAAA,KAAK,EAAS,OAAO;AACrB,YAAA,QAAQ,EAAM,SAAS;AACvB,YAAA,YAAY,EAAE,SAAS;AACvB,YAAA,WAAW,EAAG,OAAO;SACxB,CAAC;KACL;AAED;;AAEG;AACH,IAAA,IAAI,kBAAkB,GAAA;QAElB,OAAO;AACH,YAAA,KAAK,EAAS,QAAQ;AACtB,YAAA,QAAQ,EAAM,SAAS;AACvB,YAAA,YAAY,EAAE,SAAS;AACvB,YAAA,WAAW,EAAG,QAAQ;SACzB,CAAC;KACL;;;;AAMD;;;;AAIG;IACH,QAAQ,CAAC,SAAiB,EAAE,EAAA;QAExB,MAAM,KAAK,GAAG,gEAAgE,CAAC;QAC/E,IAAI,IAAI,GAAG,EAAE,CAAC;QAEd,KAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAC5B;AACI,YAAA,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AAClE,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;KACf;;8GA3DQ,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,cAFb,MAAM,EAAA,CAAA,CAAA;4FAET,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAH5B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;;ACLD;;AAEG;;;;"}